{"version":3,"file":"static/js/907.8db2c251.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formName\":\"ContactForm_formName__9bHzl\",\"formNumber\":\"ContactForm_formNumber__UMrmC\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter.filter;\n","import React from 'react';\nimport { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const items = useSelector(getContacts);\n\n  const handleChangeName = e => {\n    const { value } = e.target;\n    setName(value);\n  };\n\n  const handleChangeNumber = e => {\n    const { value } = e.target;\n    setNumber(value);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const contactsLists = [...items];\n    if (contactsLists.findIndex(contact => name === contact.name) !== -1) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleFormSubmit}>\n      <label className={css.formLabel}>\n        Name\n        <input\n          className={css.formName}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChangeName}\n        />\n      </label>\n      <label className={css.formLabel}>\n        Number\n        <input\n          className={css.formNumber}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter phone number\"\n          value={number}\n          onChange={handleChangeNumber}\n        />\n      </label>\n      <button className={css.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactListItemBtn\":\"ContactList_contactListItemBtn__TXYnT\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { delContact } from 'redux/contacts/operations';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport css from './ContactList.module.css';\n\nconst getVisibleContacts = (contacts, filter) => {\n  if (!filter) {\n    return contacts;\n  } else {\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  }\n};\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const visibleContacts = getVisibleContacts(contacts, filter);\n\n  const dispatch = useDispatch();\n  const handleDelete = id => dispatch(delContact(id));\n\n  return (\n    <div className={css.wraperContactList}>\n      <ul className={css.contactList}>\n        {visibleContacts.map((contact, id) => (\n          <li key={id} className={css.contactListItem}>\n            {contact.name}: {contact.number}\n            <button\n              type=\"button\"\n              className={css.contactListItemBtn}\n              onClick={() => handleDelete(contact.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterName\":\"Filter_filterName__Y2kKA\",\"filterLabel\":\"Filter_filterLabel__+pnW-\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <div>\n      <label className={css.filterLabel}>Find contacts by Name </label>\n      <input\n        className={css.filterName}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter filter\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { getIsLoading } from 'redux/contacts/selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div>\n        <title>Phonebook</title>\n      </div>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filter","ContactForm","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","useSelector","_jsxs","className","css","onSubmit","e","preventDefault","form","currentTarget","_toConsumableArray","findIndex","contact","alert","concat","addContact","reset","children","_jsx","type","pattern","title","required","placeholder","value","onChange","target","ContactList","visibleContacts","toLowerCase","includes","getVisibleContacts","map","id","onClick","delContact","handleDelete","Filter","setFilter","Contacts","useEffect","fetchContacts","_Fragment"],"sourceRoot":""}